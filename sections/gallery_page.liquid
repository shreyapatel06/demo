<div class="grid">
  <!-- width of .grid-sizer used for columnWidth -->
  <div class="grid-sizer"></div>
  {% for block in section.blocks %}
  <div class="grid-item images">
<!--     <img src="{{ block.settings.image | img_url:'master' }}" alt="{{ block.settings.image_alt }}" loading="lazy" width="500px" height="250px"> -->
    <img src="{{ block.settings.image | img_url:'master' }}" alt="{{ block.settings.image_alt }}" loading="lazy" width="100%" height="100%">
  </div>
  {% endfor %}
</div>

<style>
  img{
/*   width:100%;
    height:100%; */
  }
  .grid-sizer,
  .grid-item { width: 20%; }
  .images{
  	display:none;
  }
  footer{
    padding-top: 281px;
  }
  .grid{
    width: 1400px;
    margin: auto;
  }
</style>
{{ 'masonry.pkgd.min.js' |  asset_url | script_tag }}
<script>
  $(document).ready(function(){
    $('.images:lt(5)').show();
    var shown = 5;
    $(window).on('scroll', function(e){ 
      e.preventDefault();
      if($(window).scrollTop() <= $(document).height() - $(window).height()) {
        var shown = $('.images:visible').size()+5;
        console.log(shown);
        $('.images:lt('+shown+')').show();
      }
      grid_images();
    }); 
    grid_images();
    function grid_images(){
      $('.grid').masonry({
        // set itemSelector so .grid-sizer is not used in layout
        itemSelector: '.grid-item',
        // use element for option
        columnWidth: '.grid-sizer',
        percentPosition: true
      });
      var $grid = $('.grid').masonry({
        // options...
      });
      // layout Masonry after each image loads
      $grid.imagesLoaded().progress( function(){
        $grid.masonry('layout');
      });
    }
  });
</script>
{% schema %}
{
	"name":"gallery",
	"settings":[],
	"blocks":[
		{
			"type":"image_picker",
			"name":"image_picker",
			"settings":[
				{
					"type":"image_picker",
					"id":"image",
					"label":"image"
				}
			]
		}
	]
}
{% endschema %}