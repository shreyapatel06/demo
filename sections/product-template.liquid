{{ section.settings.liquid }}<br>
{{ product.metafields.desc.gray | metafield_tag }}<br>
{{ product.metafields.new_name.new_meta | metafield_tag }}

<!-- amai_stp-added -->
{% render 'amai_stp-product-snippet' %}
<!-- /amai_stp-added -->

{{'shop.css' | asset_url | stylesheet_tag}} 

{{'html5lightbox.js' | asset_url | script_tag}} 


<main class="main-content"> 
  <!--   <section class="page-header dataBg" data-bg-src="https://cdn.shopify.com/s/files/1/0425/7225/1295/files/shop-header.png?v=1598094715">
<div class="container">
<h2 class="h1 text-center color4">Shop</h2>
</div>
</section> -->
  <section class="product-section">
    <div class="container">
      
      <div class="row">
        <div class="product-gallery half">
          <div class="product-images">
            {% for media in product.media %}
            {% case media.media_type %}
            {% when 'image' %}
            <div class="image-slide image-slide1 {{ media.alt }}">
              <img src="{{ media | img_url:'master' }}" alt="{{ media.alt }}" class="block__pic" 
                   loading="lazy"
                   data-fancybox="gallery"
                   >
            </div>
            {% when 'external_video' %}
            {% assign iframe = media | external_video_tag %}
            {% capture you_tube_vimeo_class %}
            {% if iframe contains 'youtube' %}
            <div class="image-slide youtube {{ media.alt }}">
              {{ media | external_video_url: loop: "1", mute: "1" | external_video_tag:  class: "youtube_video", id:"1_" }}
            </div>
            {% elsif iframe contains 'vimeo' %}
            <div class="image-slide vimeo {{ media.alt }}">  
              {{ media | external_video_url: loop: "1", muted: "1" | external_video_tag:  class: "vimeo_video", id:"1_" }}
            </div>
            {% endif %}
            {% endcapture %}
            
            {{ you_tube_vimeo_class }}
            {% comment %}
            {{media.host}}==
            {% endcomment %}
            
            {% when 'video' %}
            <div class="image-slide video {{ media.alt }}">
              {{ media | video_tag: controls: true , loop: true , class: "video1" }}
            </div>
            {% when 'model' %}
            <div class="image-slide {{ media.alt }}">
              {{ media | model_viewer_tag }}
            </div>
            {% else %}
            <div class="image-slide {{ media.alt }}">
              {{ media | media_tag }}
            </div>
            {% endcase %}
            {% endfor %}
          </div>
          <div class="product-thumbs">
            {% for media in product.media %}
            {% case media.media_type %}
            {% when 'video' %}
            <div class="image-slide">
              {{ media | video_tag: controls: false , class: "video2"}}
            </div>
            {% else %}
            <div class="image-slide">
              <img src="{{ media | img_url:'350x350' }}" alt="{{ media.alt }}" data-src="{{ media | img_url:'350x350' }}" class="">
            </div>
            {% endcase %}
            {% endfor %}
          </div>

       
          
        </div>
        <div class="product-content half">
          <div class="product-content-cover">
            <h1 class="h2 color6">{{ product.title }}</h1>
            <div class="product-form">
              {% if product.options.size <= 2  %}
              {% include 'product-form' %}
              {% elsif product.options.size > 1 %}
              {% include 'product-order-form' %}
              {% endif %}
            </div>
            <div class="product-description">
              <h5 class="accordion-heading">DESCRIPTION</h5>
              <div class="desc accordion-content">
                <p>{{ product.description }}</p>
              </div>

              {% assign materials = product.metafields.materials.material %}
              {% if materials != blank %}
              <h5 class="accordion-heading">Materials</h5>
              <div class="desc accordion-content">
                {% assign m =  materials | split: ',' | uniq %}
                <div class="product-description custom">
                  {% for i in m %}
                  <h5 class="accordion-heading">{{ i }}</h5>
                  <div class="desc accordion-content">
                    {{ shop.metafields.materials_desc[i] }}
                  </div>
                  {% endfor %}
                </div>
              </div>
              {% endif %}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>   
</main>

{{ product.metafields.new_app.color }}=======
{{ product.metafields.new_app.text }}
{{ product.metafields.new_app.repeater }}

{% comment %}
{% include 'recently-viewed' %} 
{% endcomment %}


<script>
  
//  $(".html5lightbox").html5lightbox();
  
  //slick change then varinat descprition change
//   $(".product-images").on("afterChange , beforeChange", function(event, slick) {
//     var currentSlide = $(slick.$slider).find(".slick-current");
//     var alt = $(currentSlide).find('img').attr("src");
//     {% for variant in product.variants %}
//     var title = '{{ variant.image.src }}';
//     if(alt.indexOf(title) != -1){
//       var html = '{{ variant.metafields.descprition_variant.color }}';
//       $('.color_desc').html(html);                      

//       $('#product-select').val('{{ variant.id }}');
//                                //     	 $('#product-select').find('option[value={{ variant.id }}]').prop("selected","selected");
//                                $('.select').find('input[type=radio].{{ variant.id }}').trigger("change");

//                                                  }
//                                                  {% endfor %}
//                                                  }); 

      $('body').on("change",".swatch-element input[type=radio]:checked",function(e){
        var change = $(this);
        var label = $(this).next();
        var color = "0px 0px 6px 7px "+label.data("color");
        label.css("box-shadow",color);
        $('input[type=radio].swatch_input').each(function(index,val){
          if(!$(val).is(":checked")){ 
            var shadow = $(val).next().data("shadow");
            $(val).next().css("box-shadow",shadow);
          }
        });
      });         



      $(document).ready(function(){
        $(".plus").on("click",function(){
          var qty=$(this).parent().find("#qty").val();
          qty=parseInt(qty);    
          qty=qty+1;
          $(this).parent().find("#qty").val(qty);
        });
        $(".minus").on("click",function(){
          var qty=$(this).parent().find("#qty").val();
          qty=parseInt(qty);    
          qty=qty-1;
          if(qty<1) {
            qty=1;
          }
          $(this).parent().find("#qty").val(qty);
        });
        
        var y = $('.product-images').find('.youtube_video');
        $.each(y,function(index,val){
          var src =  $(val).attr('src');
          var p = "/embed/";
          var src2 = src.split(p)[1];
          src2 = src2.split("?")[0];
          //       console.log(src2);
          var src1 = src+"&playlist="+src2;
          //       console.log(src);
          $(val).attr("src",src1);
        });

        $('.video').attr("width","100%");
        $('.video').attr("height","100%");

        function PlayPauseVideo(slider, play){
          var  slideType, player, command;

          slideType = slider.attr("class").split(" ")[1];

          //console.log(slideType);

          player = slider.find("iframe").get(0);      

          var play1  = play+"Video";

          if(slideType == 'youtube') {
            command = {
              "event": "command",
              "func": play1
            };
          }else if(slideType == 'vimeo'){
            command={
              "method": play,
              "value" : 1
            };
          }else if(slideType == 'video'){
            var video = slider.children("video").get(0);
            if (video != null) {
              if (play === "play"){
                video.play();
              } else {
                video.pause();
              }
            }
          }

          if (player != undefined){
            player.contentWindow.postMessage(JSON.stringify(command),"*");
          }
        }

        $(".product-images").on("beforeChange", function(event, slick) {
          var currentSlide = $(slick.$slider).find(".slick-current");
          PlayPauseVideo(currentSlide,"pause");
        });

        $(".product-images").on("afterChange", function(event, slick) {
          var currentSlide = $(slick.$slider).find(".slick-current");
          PlayPauseVideo(currentSlide,"play");
        });

      });          


      var selectCallback = function(variant, selector) {
            console.log(variant);
        //     console.log(selector);
        var money_format = "{{ shop.money_format }}"; 
        if(variant && variant.available) {
          jQuery('#add-to-cart').removeClass('disabled'); 
          if(variant.price < variant.compare_at_price){
            jQuery('#price-preview').html(Shopify.formatMoney(variant.price,money_format) + " <br><del>" + Shopify.formatMoney(variant.compare_at_price, money_format) + "</del>");
          } else {
            jQuery('#price-preview').html(Shopify.formatMoney(variant.price, money_format));
          }
          var index_image = variant.featured_media.position - 1;   
          console.log(index_image);
//           $('.product-images').slick('slickGoTo', index_image);
//           $('.product-thumbs').slick('slickGoTo', index_image);                                
        } else {
          var message = variant ? "Sold Out" : "Unavailable";
          setTimeout(function(){
            $('#add-to-cart').text(message)
          },10);
          $('#add-to-cart').addClass('disabled'); 
        }



        // BEGIN SWATCHES
        if (variant) {
          var form = jQuery('#' + selector.domIdPrefix).closest('form');
          for (var i=0,length=variant.options.length; i<length; i++) {
            var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
//             if (radioButton.size()) {
//               radioButton.get(0).checked = true;
//             }
            var value=radioButton.next().attr('data-value');
            radioButton.parents('.swatch').find('.option_title span').html(' : '+value);
          }
        }
        // END SWATCHES 

//         {% assign option_to_match = 'color' %}
//         {% assign option_index = 0 %}
//         {% for option in product.options %}
//         {% if option == option_to_match %}
//         {% assign option_index = forloop.index %}
//         {% endif %}
//         {% endfor %}
//         if(variant){
//           var alt = variant.option{{option_index}};
//           console.log(alt);
//           $('.image-slide').hide();
//           $('.'+alt).show();
//         }
        
      }; //end selectcallback

      jQuery(document).ready(function(){
        new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: false });
      });

      


</script>
<style>
  .youtube_video,.vimeo_video {
    width: 100%;
    height: 700px;
  }
  video.video1 {
    width: 100%;
    margin-top: 372px;
  }
  video.video2 {
    width: 100%;
    margin-top: 69px;
  }
  .image-slide1:hover {
    cursor: crosshair;
  }
  .image-slide1:active {
    cursor: crosshair;
  }
  {% if product.handle contains 'girlss-stylish-handbeg' or product.handle contains 'girlss-stylish-handbegs' %}
  .product-thumbs .image-slide img{
    width: 100px;
    height: 100px;
    object-fit: cover;
  }
  .product-gallery .product-images img {
    width: 587px;
    height: 490px;
    object-fit: contain;
  }
  {% endif %}
  
</style>

<script>

  //     $(".block__pic").imagezoomsl({
  //       zoomrange: [3,4],
  //       magnifiersize: [380, 550], 	
  //       magnifierborder: '1px solid white'
  //     });



  /*   var i,image_change=0;      
      for(i=0;i<selector.selectors.length;i++){
        if(selector.selectors[i].name == 'color'){
          image_change=1;
        }	
      }
      if(image_change==1){
        var alt=""; 
        if(variant.featured_image){
          alt=variant.featured_image.src;
        }
        {% for image in product.images %}
        var img_alt="{{ image | img_url:'master' }}";
        if(alt.indexOf(img_alt) != -1){
          var number = '{{ forloop.index0 }}';
          $('.product-thumbs').slick('slickGoTo', number);
          $('.product-images').slick('slickGoTo', number);
        }
        {% endfor %}
      }   */
</script>


{% schema %}
  {
    "name": "Product Template",
    "settings": [
		{
			"type":"liquid",
			"id":"liquid",
			"label":"Liquid"
		}
	],
	"blocks":[
		{
			"type":"block",
			"name":"Block",
			"settings":[
				{
					"type":"text",
					"id":"text1",
					"label":"Text1"
				}
			]
		},
		{
			"type":"price_block",
			"name":"Price Block",
			"settings":[
				{
					"type":"text",
					"id":"price1",
					"label":"Price1"
				}
			]
		}
	]
  }
{% endschema %}
